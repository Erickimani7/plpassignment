# Base class
class Superhero:
    def __init__(self, name, power, weakness):
        self.name = name
        self.power = power
        self.weakness = weakness

    def introduce(self):
        print(f"I am {self.name}, my power is {self.power} and my weakness is {self.weakness}.")

    def use_power(self):
        print(f"{self.name} uses {self.power}!")

# Derived class (inheritance)
class FlyingHero(Superhero):
    def __init__(self, name, power, weakness, flight_speed):
        super().__init__(name, power, weakness)
        self.flight_speed = flight_speed

    def use_power(self):
        print(f"{self.name} flies at {self.flight_speed} mph using {self.power}!")

# Another derived class
class StrengthHero(Superhero):
    def __init__(self, name, power, weakness, strength_level):
        super().__init__(name, power, weakness)
        self.strength_level = strength_level

    def use_power(self):
        print(f"{self.name} lifts {self.strength_level} tons with {self.power}!")

# Test it
hero1 = FlyingHero("SkyBolt", "Aerokinesis", "Storms", 600)
hero2 = StrengthHero("Titan", "Super Strength", "Kryptonite", 100)

hero1.introduce()
hero1.use_power()

hero2.introduce()
hero2.use_power()

activity 2
# Base class
class Vehicle:
    def move(self):
        print("The vehicle moves.")

# Derived classes
class Car(Vehicle):
    def move(self):
        print("Driving üöó")

class Plane(Vehicle):
    def move(self):
        print("Flying ‚úàÔ∏è")

class Boat(Vehicle):
    def move(self):
        print("Sailing üö§")

# Demonstrating polymorphism
vehicles = [Car(), Plane(), Boat()]

for v in vehicles:
    v.move()
