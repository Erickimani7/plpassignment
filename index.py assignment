import requests

# Function to fetch weather data from OpenWeatherMap API
def get_weather(city_name, api_key):
    url = f"http://api.openweathermap.org/data/2.5/weather?q={city_name}&appid={api_key}&units=metric"
    
    # Send GET request to the OpenWeatherMap API
    response = requests.get(url)
    
    if response.status_code == 200:
        data = response.json()
        
        # Extracting relevant weather details
        city = data["name"]
        country = data["sys"]["country"]
        temperature = data["main"]["temp"]
        humidity = data["main"]["humidity"]
        condition = data["weather"][0]["description"]
        
        return {
            "city": city,
            "country": country,
            "temperature": temperature,
            "humidity": humidity,
            "condition": condition
        }
    else:
        return None

# Function to print the weather data
def print_weather(data):
    if data:
        print(f"Weather in {data['city']}, {data['country']}:")
        print(f"Temperature: {data['temperature']}Â°C")
        print(f"Humidity: {data['humidity']}%")
        print(f"Condition: {data['condition']}")
    else:
        print("City not found or invalid API request.")

# Main program to interact with the user
def main():
    api_key = "your_api_key_here"  # Replace with your OpenWeatherMap API key
    city_name = input("Enter city name: ")
    
    weather_data = get_weather(city_name, api_key)
    print_weather(weather_data)

if __name__ == "__main__":
    main()
import sqlite3

# Function to create the database table
def create_db():
    conn = sqlite3.connect('weather.db')
    cursor = conn.cursor()
    
    cursor.execute('''CREATE TABLE IF NOT EXISTS weather_data (
                        id INTEGER PRIMARY KEY AUTOINCREMENT,
                        city TEXT,
                        country TEXT,
                        temperature REAL,
                        humidity INTEGER,
                        condition TEXT,
                        date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                    )''')
    conn.commit()
    conn.close()

# Function to insert weather data into the database
def insert_weather_to_db(data):
    conn = sqlite3.connect('weather.db')
    cursor = conn.cursor()
    
    cursor.execute('''INSERT INTO weather_data (city, country, temperature, humidity, condition)
                      VALUES (?, ?, ?, ?, ?)''', 
                   (data['city'], data['country'], data['temperature'], data['humidity'], data['condition']))
    
    conn.commit()
    conn.close()

# Main function to store data in the database after fetching from the API
def main():
    api_key = "your_api_key_here"  # Replace with your OpenWeatherMap API key
    city_name = input("Enter city name: ")
    
    weather_data = get_weather(city_name, api_key)
    
    if weather_data:
        print_weather(weather_data)
        
        # Insert weather data into the SQLite database
        insert_weather_to_db(weather_data)
        print("Weather data saved to the database.")
    else:
        print("City not found or invalid API request.")

if __name__ == "__main__":
    create_db()  # Create the database if it doesn't exist
    main()
python weather_app.py
